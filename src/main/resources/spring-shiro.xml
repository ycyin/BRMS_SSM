<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 用户授权信息Cache -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager" >
        <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>
    </bean>
<!--    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />-->

    <!-- 配置自定义Realm -->
    <bean id="myRealm" class="com.yyc.shiro.MyShiroRealm">
        <!-- 配置缓存管理器-->
        <property name="cacheManager" ref="cacheManager" />
        <!-- 配置加密器 -->
        <property name="credentialsMatcher">
        <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
            <property name="hashAlgorithmName" value="MD5"></property> <!-- 加密算法的名称 -->
            <property name="hashIterations" value="2"></property> <!-- 配置加密的次数 -->
        </bean>
        </property>
    </bean>

    <!-- 禁用掉会话调度器 -为了配合使用JWT -->
    <bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager">
        <property name="sessionValidationSchedulerEnabled" value="false"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="cacheManager" ref="cacheManager" />
        <property name="sessionManager" ref="sessionManager"/>
        <property name="realm" ref="myRealm"/>
    </bean>


    <!--自定义的filter bean-->
    <bean id="shiroAuthcFilter" class="com.yyc.filter.ShiroAuthcFilter"/>

    <!-- Shiro过滤器 核心-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>

        <property name="filters">
            <map>
                <entry key="authc" value-ref="shiroAuthcFilter" />
            </map>
        </property>

        <!-- 身份认证失败，则跳转到登录页面的配置 -->
<!--        <property name="loginUrl" value="/nologin"/>-->
        <!-- 权限认证失败，则跳转到指定页面 -->
<!--        <property name="unauthorizedUrl" value="/unauthorized"/>-->

        <!-- Shiro连接约束配置,即过滤链的定义 -->
        <property name="filterChainDefinitions">
            <value>
                /logout = logout
                <!--anon 表示匿名访问，不需要认证以及授权-->
                /main/login = anon
                <!--配置swagger资源不被拦截，这里由于集成了Shiro，需要在Shiro过滤中配置-->
                /swagger-ui.html = anon
                /webjars/** = anon
                /v2/** = anon
                /swagger-resources/** = anon
                <!--authc表示需要认证 没有进行身份认证是不能进行访问的,这里使用的是自定义过滤器-->
                /** = authc
            </value>
        </property>

    </bean>
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- 开启Shiro注解 巨坑：需要spring aop的支持，在xml中要加入<aop:config proxy-target-class="true"></aop:config> -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>