<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yyc.dao.BookMapper">
    <resultMap id="book" type="com.yyc.entity.Book">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="book_isbn" property="bookIsbn" jdbcType="VARCHAR"/>
        <result column="book_name" property="bookName" jdbcType="VARCHAR"/>
        <result column="book_price" property="bookPrice" jdbcType="DECIMAL"/>
        <result column="book_author" property="bookAuthor" jdbcType="VARCHAR"/>
        <result column="book_repertorySize" property="bookRepertorySize" jdbcType="INTEGER"/>
        <result column="book_pub" property="bookPub" jdbcType="INTEGER"/>
        <result column="book_category" property="bookCategory" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="book_list">
    id,book_isbn, book_name, book_price, book_author,book_repertorySize,book_pub,book_category
    </sql>
    <select id="selectAllBook" resultMap="book">
        select
        <include refid="book_list"/>
        from t_book
    </select>
    <select id="selectAllBook2" resultMap="book">
        select
        <include refid="book_list"/>
        from t_book
        <if test="searchItem == 'book_name' and ''!= searchValue">
         where book_name like CONCAT('%',#{searchValue},'%')
        </if>
        <if test="searchItem == 'book_category' and ''!= searchValue">
            where book_category like CONCAT('%',#{searchValue},'%')
        </if>
        <if test="searchItem == 'book_author' and ''!= searchValue">
            where book_author like CONCAT('%',#{searchValue},'%')
        </if>
        <if test="searchItem == 'book_pub' and ''!= searchValue">
            where book_pub like CONCAT('%',#{searchValue},'%')
        </if>
    </select>

    <insert id="insertBook" parameterType="com.yyc.entity.Book">
    insert into t_book (book_isbn,book_name, book_price,book_author,book_repertorySize,book_pub,book_category)
    values (#{bookIsbn,jdbcType=VARCHAR},#{bookName,jdbcType=VARCHAR}, #{bookPrice,jdbcType=DECIMAL}, #{bookAuthor,jdbcType=VARCHAR},
      #{bookRepertorySize,jdbcType=INTEGER},#{bookPub,jdbcType=INTEGER},#{bookCategory,jdbcType=INTEGER})
  </insert>
    <update id="updateBook" parameterType="com.yyc.entity.Book">
        update t_book
        <set>
            <if test="bookIsbn != null">
                book_isbn = #{bookIsbn,jdbcType=VARCHAR},
            </if>
            <if test="bookName != null">
                book_name = #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="bookPrice != null">
                book_price = #{bookPrice,jdbcType=DECIMAL},
            </if>
            <if test="bookAuthor != null">
                book_author = #{bookAuthor,jdbcType=VARCHAR},
            </if>
            <if test="bookRepertorySize != null">
                book_repertorySize = #{bookRepertorySize,jdbcType=INTEGER},
            </if>
            <if test="bookPub != null">
                book_pub = #{bookPub,jdbcType=INTEGER},
            </if>
            <if test="bookCategory != null">
                book_category = #{bookCategory,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <delete id="deleteBookByPrimaryKey" parameterType="java.lang.Integer">
        delete from t_book
        where id = #{id,jdbcType=INTEGER}
  </delete>
    <select id="selectBookPressData" resultType="java.util.HashMap">
       SELECT count(*) as bookNumber,count(distinct(book_category)) as bookCategoryNumber,pub_name as bookPub from t_book join t_publisher on t_book.book_pub = t_publisher.id GROUP BY pub_name;
    </select>

    <select id="selectBookNumberGroupByCategory" resultType="java.util.HashMap">
       SELECT category_name as bookCategory,count(*) as bookNumber FROM t_book,t_book_category_meta where t_book.book_category = t_book_category_meta.id GROUP BY book_category
    </select>

    <insert id="insertBookForeach" parameterType="java.util.List" useGeneratedKeys="true">
        insert into t_book
        (book_isbn,book_name, book_price,book_author,book_repertorySize,book_pub,book_category)
        values
        <foreach collection="list" item="book" index="index" separator=",">
            (
            #{book.bookIsbn},
            #{book.bookName},
            #{book.bookPrice},
            #{book.bookAuthor},
            #{book.bookRepertorySize},
            #{book.bookPub},
            #{book.bookCategory}
            )
        </foreach>
    </insert>

    <select id="selectBookByPrimaryKey" resultMap="book" parameterType="java.lang.Integer">
        select
        <include refid="book_list"/>
        from t_book
        where  id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectCountAll" resultType="java.lang.Integer">
        SELECT count(id) from t_book;
    </select>
</mapper>
