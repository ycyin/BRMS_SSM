<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--namespace是对应的mapper接口文件 -->
<mapper namespace="com.yyc.dao.ISysRoleMapper">
	<!-- id与接口文件中的方法名相同 -->
	<select id="findRoleByUsername" resultType="com.yyc.entity.SysRole">
       SELECT
	        t_role.id,
	        t_role.available,
	        t_role.description,
	        t_role.role
        FROM
	        t_role
        JOIN t_user_role ON t_role.id = t_user_role.role_id
        JOIN t_user ON t_user_role.user_id = t_user.id
        WHERE username=#{username}
    </select>

    <select id="findRoleNameByUsername" resultType="java.lang.String">
        SELECT
            t_role.role
        FROM
            t_user,t_role,t_user_role
        WHERE t_user.id = t_user_role.user_id
        AND t_user_role.role_id = t_role.id
        AND username=#{username}
    </select>

    <insert id="insertRole" useGeneratedKeys="true" keyProperty="id">
        <!--AFTER :insert 先执行. -->
        <selectKey order="AFTER" keyProperty="id" resultType="java.lang.Integer">
            <!-- 获取最后一次执行insert语句的 key    SysRole.getId()就可以获取id-->
            select LAST_INSERT_ID()
        </selectKey>
        insert into t_role(role,available,description)
        values (#{role},#{available},#{description})
    </insert>

    <update id="updateRoleByRoleName" parameterType="com.yyc.entity.SysRole">
        update t_role
        set available = #{available},
        description = #{description}
        where role = #{role}
    </update>

    <insert id="insertRoleAndPermission">
        insert into t_role_permission(role_id,permission_id)
        values (#{roleId},#{permissionId})
    </insert>

    <select id="selectRoleByRoleName" resultType="com.yyc.entity.SysRole">
        select * from t_role where role = #{roleName}
    </select>

    <select id="selectAllRole" resultType="com.yyc.entity.SysRole">
        select * from t_role
    </select>
</mapper>